{
  "info": {
    "name": "Project Neo 5 - Order Flow",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1. Auth",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.environment.set('token', response.token);",
                  "console.log('Token saved:', response.token);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "url": "{{baseUrl}}/user/login",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"Test123!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        }
      ]
    },
    {
      "name": "2. Orders",
      "item": [
        {
          "name": "Get All Orders",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}/order",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "if (response.orders && response.orders.length > 0) {",
                  "    pm.environment.set('existingOrderId', response.orders[0]._id);",
                  "    console.log('Existing order ID saved:', response.orders[0]._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}/order/{{existingOrderId}}",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ]
          }
        },
        {
          "name": "Create New Order",
          "request": {
            "method": "POST",
            "url": "{{baseUrl}}/order",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"products\": [\n    {\n      \"product\": \"65f1f2d76c2f6a1234567891\",\n      \"quantity\": 2,\n      \"price\": 99.99\n    }\n  ],\n  \"shippingAddress\": {\n    \"street\": \"123 Test St\",\n    \"city\": \"Test City\",\n    \"state\": \"Test State\",\n    \"zip\": \"12345\",\n    \"country\": \"Test Country\"\n  },\n  \"paymentMethod\": \"stripe\",\n  \"totalPrice\": 199.98\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.environment.set('newOrderId', response.data.order._id);",
                  "console.log('New order ID saved:', response.data.order._id);"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "3. Payments",
      "item": [
        {
          "name": "Create Payment Intent (New Order)",
          "request": {
            "method": "POST",
            "url": "{{baseUrl}}/payment/create-payment-intent",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderID\": \"{{newOrderId}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.environment.set('clientSecret', response.clientSecret);",
                  "console.log('Client secret saved:', response.clientSecret);"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Payments by Order",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}/payment/order/{{newOrderId}}",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "4. Order Status",
      "item": [
        {
          "name": "Update Order Status",
          "request": {
            "method": "PUT",
            "url": "{{baseUrl}}/order/{{newOrderId}}/status",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderStatus\": \"processing\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          }
        },
        {
          "name": "Cancel Order",
          "request": {
            "method": "PATCH",
            "url": "{{baseUrl}}/order/cancel/{{newOrderId}}",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ]
          }
        }
      ]
    }
  ]
}
